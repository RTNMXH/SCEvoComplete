include "TriggerLibs/NativeLib"
include "LibSCBW"

include "LibBWVS_h"

//--------------------------------------------------------------------------------------------------
// Library: SCEvoExtension
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libBWVS_InitLibraries () {
    libNtve_InitVariables();
    libSCBW_InitVariables();
}

// Functions
void libBWVS_gf_RemoveGeysers () {
    // Variable Declarations
    unit lv_searchGeyser;
    unit lv_targetGeyser;
    fixed lv_distanceToClosestMineral;
    unit lv_closestMineralToSearchGeyser;
    unit lv_closestMineralToTargetGeyser;
    unitgroup lv_mineralGroup;
    int lv_r;

    // Automatic Variable Declarations
    unitgroup autoEABEE72C_g;
    int autoEABEE72C_u;
    unit autoEABEE72C_var;
    unitgroup auto1D092848_g;
    int auto1D092848_u;
    unit auto1D092848_var;
    unitgroup auto5DD3103C_g;
    int auto5DD3103C_u;
    unit auto5DD3103C_var;

    // Variable Initialization
    lv_mineralGroup = UnitGroupEmpty();

    // Implementation
    autoEABEE72C_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEABEE72C_u = UnitGroupCount(autoEABEE72C_g, c_unitCountAll);
    for (;; autoEABEE72C_u -= 1) {
        autoEABEE72C_var = UnitGroupUnitFromEnd(autoEABEE72C_g, autoEABEE72C_u);
        if (autoEABEE72C_var == null) { break; }
        UnitGroupAdd(lv_mineralGroup, autoEABEE72C_var);
    }
    auto1D092848_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1D092848_u = UnitGroupCount(auto1D092848_g, c_unitCountAll);
    for (;; auto1D092848_u -= 1) {
        auto1D092848_var = UnitGroupUnitFromEnd(auto1D092848_g, auto1D092848_u);
        if (auto1D092848_var == null) { break; }
        lv_searchGeyser = null;
        lv_targetGeyser = null;
        lv_closestMineralToTargetGeyser = null;
        lv_closestMineralToSearchGeyser = null;
        if (((UnitGetType(auto1D092848_var) == "RichVespeneGeyser") || (UnitGetType(auto1D092848_var) == "VespeneGeyser") || (UnitGetType(auto1D092848_var) == "ProtossVespeneGeyser") || (UnitGetType(auto1D092848_var) == "PurifierVespeneGeyser") || (UnitGetType(auto1D092848_var) == "ShakurasVespeneGeyser") || (UnitGetType(auto1D092848_var) == "SpacePlatformGeyser"))) {
            lv_searchGeyser = auto1D092848_var;
            auto5DD3103C_g = UnitGroup(null, c_playerAny, RegionCircle(UnitGetPosition(lv_searchGeyser), 16.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            auto5DD3103C_u = UnitGroupCount(auto5DD3103C_g, c_unitCountAll);
            for (;; auto5DD3103C_u -= 1) {
                auto5DD3103C_var = UnitGroupUnitFromEnd(auto5DD3103C_g, auto5DD3103C_u);
                if (auto5DD3103C_var == null) { break; }
                if (((UnitGetType(auto5DD3103C_var) == "RichVespeneGeyser") || (UnitGetType(auto5DD3103C_var) == "VespeneGeyser") || (UnitGetType(auto5DD3103C_var) == "ProtossVespeneGeyser") || (UnitGetType(auto5DD3103C_var) == "PurifierVespeneGeyser") || (UnitGetType(auto5DD3103C_var) == "ShakurasVespeneGeyser") || (UnitGetType(auto5DD3103C_var) == "SpacePlatformGeyser"))) {
                    if ((auto5DD3103C_var != lv_searchGeyser)) {
                        lv_targetGeyser = auto5DD3103C_var;
                        break;
                    }

                }

            }
            if ((lv_targetGeyser != null)) {
                lv_closestMineralToSearchGeyser = UnitGroupClosestToPoint(lv_mineralGroup, UnitGetPosition(lv_searchGeyser));
                lv_closestMineralToTargetGeyser = UnitGroupClosestToPoint(lv_mineralGroup, UnitGetPosition(lv_targetGeyser));
                if ((DistanceBetweenPoints(UnitGetPosition(lv_targetGeyser), UnitGetPosition(lv_closestMineralToTargetGeyser)) == DistanceBetweenPoints(UnitGetPosition(lv_searchGeyser), UnitGetPosition(lv_closestMineralToSearchGeyser)))) {
                    lv_r = RandomInt(1, 2);
                    if ((lv_r == 1)) {
                        UnitRemove(lv_targetGeyser);
                    }
                    else {
                        UnitRemove(lv_searchGeyser);
                    }
                }
                else if ((DistanceBetweenPoints(UnitGetPosition(lv_targetGeyser), UnitGetPosition(lv_closestMineralToTargetGeyser)) > DistanceBetweenPoints(UnitGetPosition(lv_searchGeyser), UnitGetPosition(lv_closestMineralToSearchGeyser)))) {
                    UnitRemove(lv_targetGeyser);
                }
                else if ((DistanceBetweenPoints(UnitGetPosition(lv_searchGeyser), UnitGetPosition(lv_closestMineralToSearchGeyser)) > DistanceBetweenPoints(UnitGetPosition(lv_targetGeyser), UnitGetPosition(lv_closestMineralToTargetGeyser)))) {
                    UnitRemove(lv_searchGeyser);
                }
            }

        }

    }
}

void libBWVS_gf_IncreaseResourceCounts () {
    // Variable Declarations
    unitgroup lv_mineralGroup;
    unitgroup lv_geyserGroup;
    int lv_r;

    // Automatic Variable Declarations
    unitgroup auto9CF5A7F8_g;
    int auto9CF5A7F8_u;
    unit auto9CF5A7F8_var;
    unitgroup auto141D92B8_g;
    int auto141D92B8_u;
    unit auto141D92B8_var;
    unitgroup auto59A7539B_g;
    int auto59A7539B_u;
    unit auto59A7539B_var;
    unitgroup autoAF19633F_g;
    int autoAF19633F_u;
    unit autoAF19633F_var;
    unitgroup auto00D7C2A8_g;
    int auto00D7C2A8_u;
    unit auto00D7C2A8_var;
    unitgroup auto3CC1C735_g;
    int auto3CC1C735_u;
    unit auto3CC1C735_var;

    // Variable Initialization
    lv_mineralGroup = UnitGroupEmpty();
    lv_geyserGroup = UnitGroupEmpty();

    // Implementation
    auto9CF5A7F8_g = UnitGroup("BattleStationMineralField750", 0, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9CF5A7F8_u = UnitGroupCount(auto9CF5A7F8_g, c_unitCountAll);
    for (;; auto9CF5A7F8_u -= 1) {
        auto9CF5A7F8_var = UnitGroupUnitFromEnd(auto9CF5A7F8_g, auto9CF5A7F8_u);
        if (auto9CF5A7F8_var == null) { break; }
        libNtve_gf_ReplaceUnit(auto9CF5A7F8_var, "BattleStationMineralField", libNtve_ge_ReplaceUnitOptions_NewUnitsDefault);
    }
    auto141D92B8_g = UnitGroup("LabMineralField750", 0, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto141D92B8_u = UnitGroupCount(auto141D92B8_g, c_unitCountAll);
    for (;; auto141D92B8_u -= 1) {
        auto141D92B8_var = UnitGroupUnitFromEnd(auto141D92B8_g, auto141D92B8_u);
        if (auto141D92B8_var == null) { break; }
        libNtve_gf_ReplaceUnit(auto141D92B8_var, "LabMineralField", libNtve_ge_ReplaceUnitOptions_NewUnitsDefault);
    }
    auto59A7539B_g = UnitGroup("MineralField750", 0, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto59A7539B_u = UnitGroupCount(auto59A7539B_g, c_unitCountAll);
    for (;; auto59A7539B_u -= 1) {
        auto59A7539B_var = UnitGroupUnitFromEnd(auto59A7539B_g, auto59A7539B_u);
        if (auto59A7539B_var == null) { break; }
        libNtve_gf_ReplaceUnit(auto59A7539B_var, "MineralField", libNtve_ge_ReplaceUnitOptions_NewUnitsDefault);
    }
    autoAF19633F_g = UnitGroup("MineralFieldOpaque900", 0, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoAF19633F_u = UnitGroupCount(autoAF19633F_g, c_unitCountAll);
    for (;; autoAF19633F_u -= 1) {
        autoAF19633F_var = UnitGroupUnitFromEnd(autoAF19633F_g, autoAF19633F_u);
        if (autoAF19633F_var == null) { break; }
        libNtve_gf_ReplaceUnit(autoAF19633F_var, "MineralFieldOpaque", libNtve_ge_ReplaceUnitOptions_NewUnitsDefault);
    }
    auto00D7C2A8_g = UnitGroup("PurifierRichMineralField750", 0, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto00D7C2A8_u = UnitGroupCount(auto00D7C2A8_g, c_unitCountAll);
    for (;; auto00D7C2A8_u -= 1) {
        auto00D7C2A8_var = UnitGroupUnitFromEnd(auto00D7C2A8_g, auto00D7C2A8_u);
        if (auto00D7C2A8_var == null) { break; }
        libNtve_gf_ReplaceUnit(auto00D7C2A8_var, "PurifierRichMineralField", libNtve_ge_ReplaceUnitOptions_NewUnitsDefault);
    }
    auto3CC1C735_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3CC1C735_u = UnitGroupCount(auto3CC1C735_g, c_unitCountAll);
    for (;; auto3CC1C735_u -= 1) {
        auto3CC1C735_var = UnitGroupUnitFromEnd(auto3CC1C735_g, auto3CC1C735_u);
        if (auto3CC1C735_var == null) { break; }
        UnitSetPropertyFixed(auto3CC1C735_var, c_unitPropResources, 5000.0);
        if ((UnitFilterMatch(auto3CC1C735_var, 1, UnitFilter((1 << c_targetFilterHarvestableResource), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true)) {
            UnitSetPropertyFixed(auto3CC1C735_var, c_unitPropResources, 1700.0);
        }

    }
}

void libBWVS_gf_IncreaseVespeneCounts () {
    // Variable Declarations
    unitgroup lv_mineralGroup;
    unitgroup lv_geyserGroup;
    int lv_r;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_mineralGroup = UnitGroupEmpty();
    lv_geyserGroup = UnitGroupEmpty();

    // Implementation
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Race Initialization
//--------------------------------------------------------------------------------------------------
bool libBWVS_gt_MapInitialization_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerIndex;
    int lv_r;

    // Automatic Variable Declarations
    playergroup autoA127CC04_g;
    string auto0586E33B_val;
    int auto95C56017_val;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libSCBW_gf_SC1ToggleFeature(libSCBW_ge_SC1_Feature_CorrectedRefunds, true);
    libSCBW_gf_SC1ToggleFeature(libSCBW_ge_SC1_Feature_FractionalLifeArmor, true);
    libSCBW_gf_SC1ToggleFeature(libSCBW_ge_SC1_Feature_HighgroundAdvantage, true);
    libSCBW_gf_SC1ToggleFeature(libSCBW_ge_SC1_Feature_SC2toSC1UnitSwap, true);
    autoA127CC04_g = PlayerGroupActive();
    lv_playerIndex = -1;
    while (true) {
        lv_playerIndex = PlayerGroupNextPlayer(autoA127CC04_g, lv_playerIndex);
        if (lv_playerIndex < 0) { break; }
        auto0586E33B_val = GameAttributePlayerValue("1", lv_playerIndex);
        if (auto0586E33B_val == "0001") {
            PlayerSetRace(lv_playerIndex, "BWTe");
        }
        else if (auto0586E33B_val == "0002") {
            PlayerSetRace(lv_playerIndex, "BWPr");
        }
        else if (auto0586E33B_val == "0003") {
            PlayerSetRace(lv_playerIndex, "BWZe");
        }
        else {
            lv_r = RandomInt(1, 3);
            auto95C56017_val = lv_r;
            if (auto95C56017_val == 1) {
                PlayerSetRace(lv_playerIndex, "BWTe");
            }
            else if (auto95C56017_val == 2) {
                PlayerSetRace(lv_playerIndex, "BWPr");
            }
            else if (auto95C56017_val == 3) {
                PlayerSetRace(lv_playerIndex, "BWZe");
            }
            else {
                PlayerSetRace(lv_playerIndex, "BWTe");
            }
        }
        if ((PlayerType(lv_playerIndex) == c_playerTypeUser)) {
            libNtve_gf_HideGameUI(false, PlayerGroupSingle(lv_playerIndex));
            libNtve_gf_HideGameUI(true, PlayerGroupSingle(lv_playerIndex));
        }

    }
    Wait(0.0625, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBWVS_gt_MapInitialization_Init () {
    libBWVS_gt_MapInitialization = TriggerCreate("libBWVS_gt_MapInitialization_Func");
    TriggerAddEventMapInit(libBWVS_gt_MapInitialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Untitled Trigger 001
//--------------------------------------------------------------------------------------------------
bool libBWVS_gt_UntitledTrigger001_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libBWVS_gf_IncreaseResourceCounts();
    libBWVS_gf_IncreaseVespeneCounts();
    return true;
}

//--------------------------------------------------------------------------------------------------
void libBWVS_gt_UntitledTrigger001_Init () {
    libBWVS_gt_UntitledTrigger001 = TriggerCreate("libBWVS_gt_UntitledTrigger001_Func");
    TriggerAddEventTimeElapsed(libBWVS_gt_UntitledTrigger001, 0.0625, c_timeGame);
}

void libBWVS_InitTriggers () {
    libBWVS_gt_MapInitialization_Init();
    libBWVS_gt_UntitledTrigger001_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libBWVS_InitLib_completed = false;

void libBWVS_InitLib () {
    if (libBWVS_InitLib_completed) {
        return;
    }

    libBWVS_InitLib_completed = true;

    libBWVS_InitLibraries();
    libBWVS_InitTriggers();
}

