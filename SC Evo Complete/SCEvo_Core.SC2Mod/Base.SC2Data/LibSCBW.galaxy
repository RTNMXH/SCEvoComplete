include "TriggerLibs/NativeLib"

include "LibSCBW_h"

//--------------------------------------------------------------------------------------------------
// Library: SCEvo
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libSCBW_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool libSCBW_InitVariables_completed = false;

void libSCBW_InitVariables () {
    if (libSCBW_InitVariables_completed) {
        return;
    }

    libSCBW_InitVariables_completed = true;

}

// Custom Script
//--------------------------------------------------------------------------------------------------
// Custom Script: Main
//--------------------------------------------------------------------------------------------------
include "Script/SCBW"
void SCBW_main(){
    SCBW_Init(); 
}

void libSCBW_InitCustomScript () {
    SCBW_main();
}

// Functions
void libSCBW_gf_OperationCwal (unit lp_unit, bool lp_construction) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto91789F07_ae;
    const int auto91789F07_ai = 1;

    // Variable Initialization
    lv_i = 1;

    // Implementation
    if ((lp_construction == true)) {
        UnitSetProgressComplete(lp_unit, 1, 99);
    }
    else {
        auto91789F07_ae = UnitQueueItemCount(lp_unit, 1);
        lv_i = 1;
        for ( ; ( (auto91789F07_ai >= 0 && lv_i <= auto91789F07_ae) || (auto91789F07_ai < 0 && lv_i >= auto91789F07_ae) ) ; lv_i += auto91789F07_ai ) {
            UnitSetProgressComplete(lp_unit, lv_i, 100);
        }
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: OperationCwal Activate
//--------------------------------------------------------------------------------------------------
bool libSCBW_gt_OperationCwalActivate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0BEA55EB_g;
    int auto0BEA55EB_u;
    unit auto0BEA55EB_var;
    unitgroup auto9DD61595_g;
    int auto9DD61595_u;
    unit auto9DD61595_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libSCBW_gv_operationCwal = !(libSCBW_gv_operationCwal);
    TriggerEnable(libSCBW_gt_OperationCwal_Train, libSCBW_gv_operationCwal);
    TriggerEnable(libSCBW_gt_OperationCwal_Constuction, libSCBW_gv_operationCwal);
    if ((libSCBW_gv_operationCwal == true)) {
        auto0BEA55EB_g = UnitGroup(null, EventPlayer(), RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterUnderConstruction - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto0BEA55EB_u = UnitGroupCount(auto0BEA55EB_g, c_unitCountAll);
        for (;; auto0BEA55EB_u -= 1) {
            auto0BEA55EB_var = UnitGroupUnitFromEnd(auto0BEA55EB_g, auto0BEA55EB_u);
            if (auto0BEA55EB_var == null) { break; }
            libSCBW_gf_OperationCwal(auto0BEA55EB_var, true);
        }
        auto9DD61595_g = UnitGroup(null, EventPlayer(), RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto9DD61595_u = UnitGroupCount(auto9DD61595_g, c_unitCountAll);
        for (;; auto9DD61595_u -= 1) {
            auto9DD61595_var = UnitGroupUnitFromEnd(auto9DD61595_g, auto9DD61595_u);
            if (auto9DD61595_var == null) { break; }
            libSCBW_gf_OperationCwal(auto9DD61595_var, false);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libSCBW_gt_OperationCwalActivate_Init () {
    libSCBW_gt_OperationCwalActivate = TriggerCreate("libSCBW_gt_OperationCwalActivate_Func");
    TriggerAddEventCheatUsed(libSCBW_gt_OperationCwalActivate, c_playerAny, c_gameCheatFastBuild);
}

//--------------------------------------------------------------------------------------------------
// Trigger: OperationCwal_Train
//--------------------------------------------------------------------------------------------------
bool libSCBW_gt_OperationCwal_Train_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libSCBW_gv_operationCwal == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libSCBW_gf_OperationCwal(EventUnit(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libSCBW_gt_OperationCwal_Train_Init () {
    libSCBW_gt_OperationCwal_Train = TriggerCreate("libSCBW_gt_OperationCwal_Train_Func");
    TriggerEnable(libSCBW_gt_OperationCwal_Train, false);
    TriggerAddEventUnitResearchProgress(libSCBW_gt_OperationCwal_Train, null, c_unitProgressStageStart);
    TriggerAddEventUnitTrainProgress(libSCBW_gt_OperationCwal_Train, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: OperationCwal_Constuction
//--------------------------------------------------------------------------------------------------
bool libSCBW_gt_OperationCwal_Constuction_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libSCBW_gv_operationCwal == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libSCBW_gf_OperationCwal(EventUnitProgressUnit(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libSCBW_gt_OperationCwal_Constuction_Init () {
    libSCBW_gt_OperationCwal_Constuction = TriggerCreate("libSCBW_gt_OperationCwal_Constuction_Func");
    TriggerEnable(libSCBW_gt_OperationCwal_Constuction, false);
    TriggerAddEventUnitConstructProgress(libSCBW_gt_OperationCwal_Constuction, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DmgDealt
//--------------------------------------------------------------------------------------------------
bool libSCBW_gt_DmgDealt_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventUnitDamageAmount() > 0.0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextExpressionSetToken("Param/Expression/lib_SCBW_793E87D2", "B", StringToText((EventUnitDamageEffect())));
    TextExpressionSetToken("Param/Expression/lib_SCBW_793E87D2", "A", FixedToText(EventUnitDamageAmount(), c_fixedPrecisionAny));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_SCBW_793E87D2"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libSCBW_gt_DmgDealt_Init () {
    libSCBW_gt_DmgDealt = TriggerCreate("libSCBW_gt_DmgDealt_Func");
    TriggerAddEventUnitDamaged(libSCBW_gt_DmgDealt, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DmgAbsorbed
//--------------------------------------------------------------------------------------------------
bool libSCBW_gt_DmgAbsorbed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventUnitDamageAbsorbed() > 0.0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextExpressionSetToken("Param/Expression/lib_SCBW_BCBF2212", "B", StringToText((EventUnitDamageEffect())));
    TextExpressionSetToken("Param/Expression/lib_SCBW_BCBF2212", "A", FixedToText(EventUnitDamageAbsorbed(), c_fixedPrecisionAny));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_SCBW_BCBF2212"));
    TextExpressionSetToken("Param/Expression/lib_SCBW_1E5D7817", "A", FixedToText(UnitBehaviorEffectTreeUserData(EventUnit(), "ScienceVesselSCBWDefensiveMatrix@Data", "DefensiveMatrixShield"), c_fixedPrecisionAny));
    TriggerDebugOutput(1, TextExpressionAssemble("Param/Expression/lib_SCBW_1E5D7817"), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libSCBW_gt_DmgAbsorbed_Init () {
    libSCBW_gt_DmgAbsorbed = TriggerCreate("libSCBW_gt_DmgAbsorbed_Func");
    TriggerAddEventUnitDamageAbsorbed(libSCBW_gt_DmgAbsorbed, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MapInit
//--------------------------------------------------------------------------------------------------
bool libSCBW_gt_MapInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ConsoleCommand("free", true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libSCBW_gt_MapInit_Init () {
    libSCBW_gt_MapInit = TriggerCreate("libSCBW_gt_MapInit_Func");
    TriggerAddEventMapInit(libSCBW_gt_MapInit);
}

void libSCBW_InitTriggers () {
    libSCBW_gt_OperationCwalActivate_Init();
    libSCBW_gt_OperationCwal_Train_Init();
    libSCBW_gt_OperationCwal_Constuction_Init();
    libSCBW_gt_DmgDealt_Init();
    libSCBW_gt_DmgAbsorbed_Init();
    libSCBW_gt_MapInit_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libSCBW_InitLib_completed = false;

void libSCBW_InitLib () {
    if (libSCBW_InitLib_completed) {
        return;
    }

    libSCBW_InitLib_completed = true;

    libSCBW_InitLibraries();
    libSCBW_InitVariables();
    libSCBW_InitCustomScript();
    libSCBW_InitTriggers();
}

